name: coverage

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
  workflow_dispatch:

env:
  ICU_DL_PATH: "https://github.com/unicode-org/icu/releases/download/release-70-1"
  ICU4C_UBUNTU_TGZ: "icu4c-70_1-Ubuntu-20.04-x64.tgz"
  PROJECT: "urlstd"

jobs:
  download:
    runs-on: ubuntu-20.04

    steps:
    - run: mkdir requirements

    - name: Download requirements
      working-directory: requirements
      run: |
        curl -LO ${{env.ICU_DL_PATH}}/${{env.ICU4C_UBUNTU_TGZ}}

    - name: Store requirements
      uses: actions/upload-artifact@v2
      with:
        name: requirements
        path: requirements

  test:
    needs: download
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        architecture: ["x64"]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{matrix.python-version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python-version}}

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Restore requirements
      uses: actions/download-artifact@v2
      with:
        name: requirements
        path: build/extra

    - name: Set up requirements
      working-directory: build
      run: |
        sudo tar zxf extra/${{env.ICU4C_UBUNTU_TGZ}} -C / --strip-components=2
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/lib" >> $GITHUB_ENV

    - name: Set up Poetry
      run: |
        curl -sL https://install.python-poetry.org | python - -y
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests and collect coverage data
      continue-on-error: true
      run: |
        poetry run coverage run --source=${{env.PROJECT}} --context=${{matrix.python-version}} -p -m pytest --color=yes

    - name: Store coverage data
      uses: actions/upload-artifact@v2
      with:
        name: coverage-data
        path: ".coverage.*"
        if-no-files-found: error

  report:
    needs: test
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools

    - name: Install dependencies
      run: |
        python -m pip install coverage[toml]

    - name: Restore coverage data
      uses: actions/download-artifact@v2
      with:
        name: coverage-data

    - name: Report coverage statistics
      run: |
        coverage combine
        coverage report -m
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
